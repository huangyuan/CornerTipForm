<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="ts_bg" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\ts_bg.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ts_close" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACwAAAAZCAYAAABKM8wfAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAALEgAA
        CxIB0t1+/AAAA3hJREFUWEfVl91LU3EYxydqkJoGBRJ1HRYZdGH6V4hX3XZXXRZICBVGSYmI9HIhEZWm
        DjWzVHCUpUIGGSim5evYfJ0z37ZpO/Nl59v32ebpiFPPduMSPsznd56Xz85+52wnzl1vgul/+gPa4ao1
        AevZMY37bTzU9RbQtB3L5qCwOp8ck4ibqyEB6lpTUHipmi9rFHZS2JkUc4jbch3P8FpzUHixki8+Cs9Q
        eIbCBvHZE7AyatKQOFyt0bzd5orbklmEQ1ti4WVIeDIF6iSlDbIyxDq/oiGxz5q4rV7icHlGZ0ieCC9W
        6YTnn3OwwjNsp7CNwgbxDVNmgLWbHg2JZV167Hfc6BxxW6jQCc+Vc6iXwmMUHqVwBPgGKN3L+o0FDYn3
        Wo+kv+SK2+8XOmHnUw78Q+EhCg9SOEKU3kR4uuXCndYIF0tepL0lX9zmnlHYF7roHI84bJXCA0eg9lM6
        CpRuSn+RrWXdgazL8Wj6So24OcsT4PeFbmvTpRzkoXAvhXsoHCVKF6U/y6c1oCGxrEfbU+rEzfEknsKh
        u8RUMYe4Kfydwt0UjhJveyLcFvZa6daQWNaj7Sl14jZTphOeKOIQVw7Ur6lQuygdBd4PlG2SN96xA1mX
        49H0lRpxmyrRCdvvctByDtCZCnQwIUKUFsq+kR6tGuFiyYu0dyCfbhMPdcK22xy2ROFPFG5jQgQojZSt
        kfpGDYn3Wo+kfyCXbuP3KayE9rC1gAMXKWyhcCsTDOKtS4SrgrULZg2JZV167Hfc6BxxsxXqhEfzZSiF
        W9KAZkobxCXfkPMVGhJ7qw9tq5c4XJ7RGYE8ullv6YRHbshgCr+jcCMTDOKtoAy/JbeQOFyt0bxd59Jt
        rEB/hm8mwz+VxTNzDKincCzRcBSYy8bI9Tiomx+DPy8nHl/A6rezwHAmYKZwLPHjDJS+TNiKT0NcA8Lu
        nkLYinixOfiYZDkJVHFrxALv0wEn7xAlaVjuyg8Kq46kwD8Ocx5mX53gD3BKD54H6o4Dlfw4DoJazu4/
        B8zmYK7mFBzVuQFH1ZlOYXm6cF2Cf83CA3mw3kmBpyMDmzbuaQcvxAPAP56Flc4M2O6lYuZ1LjY8vMd7
        rgSeZoLCIWl5F56+B7CX5eDXtWT0XzYdCD+vHoa99CLcvUWBM7slGxKW57h/QLUEk2KCNqiOtG1+fwHh
        9h/9/kY0IAAAAABJRU5ErkJggg==
</value>
  </data>
</root>